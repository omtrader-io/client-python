# coding: utf-8

"""
    Omtrader Trader's API

    Omtrader Trader's API docs

    The version of the OpenAPI document: 1.0
    Contact: support@omtrader.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.model_symbol_class import ModelSymbolClass

class TestModelSymbolClass(unittest.TestCase):
    """ModelSymbolClass unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelSymbolClass:
        """Test ModelSymbolClass
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelSymbolClass`
        """
        model = ModelSymbolClass()
        if include_optional:
            return ModelSymbolClass(
                desc = '',
                id = 56,
                parent_id = 56,
                symbol_classes = [
                    openapi_client.models.model/symbol_class.model.SymbolClass(
                        desc = '', 
                        id = 56, 
                        parent_id = 56, 
                        symbols = [
                            openapi_client.models.model/symbol.model.Symbol(
                                base_currency = '', 
                                buy_limit = 1.337, 
                                buy_stop = 1.337, 
                                buy_stop_limit = 1.337, 
                                calculation = openapi_client.models.calculation.calculation(), 
                                contract_size = 1.337, 
                                conversion_currency = 56, 
                                conversion_type = openapi_client.models.conversion_type.conversion_type(), 
                                created_at = '', 
                                created_by = 56, 
                                data_source = openapi_client.models.model/data_source.model.DataSource(
                                    ask_markup = 56, 
                                    bid_markup = 56, 
                                    digits = 56, 
                                    feeder = '', 
                                    symbol = '', ), 
                                data_source_feeder = '', 
                                data_source_symbol = '', 
                                delay = 56, 
                                desc = '', 
                                digits = 56, 
                                enabled = True, 
                                execution = openapi_client.models.execution.execution(), 
                                expiration = '', 
                                filling = openapi_client.models.filling.filling(), 
                                id = 56, 
                                isin = '', 
                                larger_leg_enabled = True, 
                                maintenance_buy_limit = 1.337, 
                                maintenance_buy_stop = 1.337, 
                                maintenance_buy_stop_limit = 1.337, 
                                maintenance_margin_buy = 1.337, 
                                maintenance_margin_sell = 1.337, 
                                maintenance_sell_limit = 1.337, 
                                maintenance_sell_stop = 1.337, 
                                maintenance_sell_stop_limit = 1.337, 
                                margin_buy = 1.337, 
                                margin_hedged = 1.337, 
                                margin_initial = 1.337, 
                                margin_maintenance = 1.337, 
                                margin_sell = 1.337, 
                                max_loss_deviation = 1.337, 
                                max_profit_deviation = 1.337, 
                                max_time_deviation = 1.337, 
                                max_value = 1.337, 
                                min_value = 1.337, 
                                orders = '', 
                                quote_currency = '', 
                                quote_sessions = '', 
                                sell_limit = 1.337, 
                                sell_stop = 1.337, 
                                sell_stop_limit = 1.337, 
                                spread = 56, 
                                spread_balance = 56, 
                                status = openapi_client.models.status.status(), 
                                step = 1.337, 
                                stop_level = 56, 
                                swap_days = '', 
                                swap_days_year = 56, 
                                swap_long = 1.337, 
                                swap_short = 1.337, 
                                swap_type = openapi_client.models.swap_type.swap_type(), 
                                swaps_enabled = True, 
                                symbol = '', 
                                symbol_class_id = 56, 
                                symbol_map = '', 
                                tick_size = 1.337, 
                                tick_value = 1.337, 
                                time_limit = '', 
                                timeout = 56, 
                                trade_level = openapi_client.models.trade_level.trade_level(), 
                                trade_sessions = '', 
                                updated_at = '', 
                                updated_by = 56, )
                            ], )
                    ],
                symbols = [
                    openapi_client.models.model/symbol.model.Symbol(
                        base_currency = '', 
                        buy_limit = 1.337, 
                        buy_stop = 1.337, 
                        buy_stop_limit = 1.337, 
                        calculation = openapi_client.models.calculation.calculation(), 
                        contract_size = 1.337, 
                        conversion_currency = 56, 
                        conversion_type = openapi_client.models.conversion_type.conversion_type(), 
                        created_at = '', 
                        created_by = 56, 
                        data_source = openapi_client.models.model/data_source.model.DataSource(
                            ask_markup = 56, 
                            bid_markup = 56, 
                            digits = 56, 
                            feeder = '', 
                            symbol = '', ), 
                        data_source_feeder = '', 
                        data_source_symbol = '', 
                        delay = 56, 
                        desc = '', 
                        digits = 56, 
                        enabled = True, 
                        execution = openapi_client.models.execution.execution(), 
                        expiration = '', 
                        filling = openapi_client.models.filling.filling(), 
                        id = 56, 
                        isin = '', 
                        larger_leg_enabled = True, 
                        maintenance_buy_limit = 1.337, 
                        maintenance_buy_stop = 1.337, 
                        maintenance_buy_stop_limit = 1.337, 
                        maintenance_margin_buy = 1.337, 
                        maintenance_margin_sell = 1.337, 
                        maintenance_sell_limit = 1.337, 
                        maintenance_sell_stop = 1.337, 
                        maintenance_sell_stop_limit = 1.337, 
                        margin_buy = 1.337, 
                        margin_hedged = 1.337, 
                        margin_initial = 1.337, 
                        margin_maintenance = 1.337, 
                        margin_sell = 1.337, 
                        max_loss_deviation = 1.337, 
                        max_profit_deviation = 1.337, 
                        max_time_deviation = 1.337, 
                        max_value = 1.337, 
                        min_value = 1.337, 
                        orders = '', 
                        quote_currency = '', 
                        quote_sessions = '', 
                        sell_limit = 1.337, 
                        sell_stop = 1.337, 
                        sell_stop_limit = 1.337, 
                        spread = 56, 
                        spread_balance = 56, 
                        status = openapi_client.models.status.status(), 
                        step = 1.337, 
                        stop_level = 56, 
                        swap_days = '', 
                        swap_days_year = 56, 
                        swap_long = 1.337, 
                        swap_short = 1.337, 
                        swap_type = openapi_client.models.swap_type.swap_type(), 
                        swaps_enabled = True, 
                        symbol = '', 
                        symbol_class_id = 56, 
                        symbol_map = '', 
                        tick_size = 1.337, 
                        tick_value = 1.337, 
                        time_limit = '', 
                        timeout = 56, 
                        trade_level = openapi_client.models.trade_level.trade_level(), 
                        trade_sessions = '', 
                        updated_at = '', 
                        updated_by = 56, )
                    ]
            )
        else:
            return ModelSymbolClass(
        )
        """

    def testModelSymbolClass(self):
        """Test ModelSymbolClass"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
